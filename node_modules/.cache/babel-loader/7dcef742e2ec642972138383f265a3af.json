{"ast":null,"code":"var _jsxFileName = \"/home/dawid/trening/nasa/src/components/Chart/Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { StoreContext } from \"../../context/StoreContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = () => {\n  _s();\n\n  const {\n    store\n  } = useContext(StoreContext);\n  const data = store.data.near_earth_objects;\n  Object.keys(store.data.near_earth_objects).map(day => {\n    const objectsForTheDay = data[day]; //console.log(\"jestem days\", objectsForTheDay)\n\n    const namesOfObjectsForTheDay = objectsForTheDay.map(object => Object.entries(object).forEach(([key, value]) => console.log(`${key[object.id]}: ${value[object.id]}`)));\n  }); //     const keys = Object.keys(data);\n  //     console.log(keys)\n  //    const days =  Object.keys(store.data.near_earth_objects)\n  //    console.log(\"jestem days\", days )\n  // console.log(\"jestem day\", days.map(day => {\n  //     console.log(day)\n  // }) )\n\n  const arr = [];\n\n  for (let x in data) {\n    for (let i = 0; i < store.data.element_count; i++) {\n      console.log({\n        id: data[x][i].id\n      });\n    }\n  }\n  /* for (let x in data) {\n    console.log({id:data[x][0].id,name: data[x][0].name,avgSize: data[x][0].estimated_diameter.kilometers.estimated_diameter_min + data[x][0].estimated_diameter.kilometers.estimated_diameter_max/2, distance: close_approach_data[0].miss_distance.kilometers})\n   \n    }   \n  */\n  // {id:data[x][i].id,name: data[x][i].name,avgSize: data[x][i].estimated_diameter.kilometers.estimated_diameter_min + data[x][i].estimated_diameter.kilometers.estimated_diameter_max / 2,\n  //   distance: \"tbc\" }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hi        \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chart, \"73C7T2gc7osE0gOE4ApLm9/B7dk=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/home/dawid/trening/nasa/src/components/Chart/Chart.jsx"],"names":["React","useContext","StoreContext","Chart","store","data","near_earth_objects","Object","keys","map","day","objectsForTheDay","namesOfObjectsForTheDay","object","entries","forEach","key","value","console","log","id","arr","x","i","element_count"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,SAASC,YAAT,QAA6B,4BAA7B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,QAAM;AAAEC,IAAAA;AAAF,MAAYH,UAAU,CAACC,YAAD,CAA5B;AAEA,QAAMG,IAAI,GAAGD,KAAK,CAACC,IAAN,CAAWC,kBAAxB;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,KAAK,CAACC,IAAN,CAAWC,kBAAvB,EAA2CG,GAA3C,CAA+CC,GAAG,IAAI;AAClD,UAAMC,gBAAgB,GAAGN,IAAI,CAACK,GAAD,CAA7B,CADkD,CAEnD;;AACC,UAAME,uBAAuB,GAAGD,gBAAgB,CAACF,GAAjB,CAAqBI,MAAM,IAAIN,MAAM,CAACO,OAAP,CAAeD,MAAf,EAAuBE,OAAvB,CAA+B,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkBC,OAAO,CAACC,GAAR,CAAa,GAAEH,GAAG,CAACH,MAAM,CAACO,EAAR,CAAY,KAAIH,KAAK,CAACJ,MAAM,CAACO,EAAR,CAAY,EAAnD,CAAjD,CAA/B,CAAhC;AACH,GAJD,EANgB,CAWpB;AACA;AACA;AACA;AAEI;AACA;AACA;;AAKJ,QAAMC,GAAG,GAAC,EAAV;;AACA,OAAK,IAAIC,CAAT,IAAcjB,IAAd,EAAoB;AAEpB,SAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,KAAK,CAACC,IAAN,CAAWmB,aAA/B,EAA8CD,CAAC,EAA/C,EAAmD;AAChDL,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACC,QAAAA,EAAE,EAACf,IAAI,CAACiB,CAAD,CAAJ,CAAQC,CAAR,EAAWH;AAAf,OAAZ;AACA;AAGF;AAED;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAaI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH,CAzDD;;GAAMjB,K;;KAAAA,K;AA2DN,eAAeA,KAAf","sourcesContent":["import React,{useContext} from 'react'\nimport { StoreContext } from \"../../context/StoreContext\";\n\nconst Chart = () => {\n\n    const { store } = useContext(StoreContext);\n\n    const data = store.data.near_earth_objects;\n\n    Object.keys(store.data.near_earth_objects).map(day => {\n        const objectsForTheDay = data[day];\n       //console.log(\"jestem days\", objectsForTheDay)\n        const namesOfObjectsForTheDay = objectsForTheDay.map(object => Object.entries(object).forEach(([key, value]) => console.log(`${key[object.id]}: ${value[object.id]}`)));\n    })\n//     const keys = Object.keys(data);\n//     console.log(keys)\n//    const days =  Object.keys(store.data.near_earth_objects)\n//    console.log(\"jestem days\", days )\n\n    // console.log(\"jestem day\", days.map(day => {\n    //     console.log(day)\n    // }) )\n\n\n\n\nconst arr=[]\nfor (let x in data) {\n\nfor (let i = 0; i < store.data.element_count; i++) {\n   console.log({id:data[x][i].id})\n  } \n \n  \n}\n\n/* for (let x in data) {\n  console.log({id:data[x][0].id,name: data[x][0].name,avgSize: data[x][0].estimated_diameter.kilometers.estimated_diameter_min + data[x][0].estimated_diameter.kilometers.estimated_diameter_max/2, distance: close_approach_data[0].miss_distance.kilometers})\n \n  }   \n*/\n\n// {id:data[x][i].id,name: data[x][i].name,avgSize: data[x][i].estimated_diameter.kilometers.estimated_diameter_min + data[x][i].estimated_diameter.kilometers.estimated_diameter_max / 2,\n//   distance: \"tbc\" }\n\n\n\n\n\n    \n\n\n\n\n\n\n    return (\n        <div>\nhi        </div>\n    )\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}