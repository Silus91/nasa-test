{"ast":null,"code":"var _jsxFileName = \"/home/dawid/trening/nasa/src/components/Table/Table.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { StoreContext } from \"../../context/StoreContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Table = () => {\n  _s();\n\n  const [sortedField, setSortedField] = useState(null);\n  const {\n    store\n  } = useContext(StoreContext);\n  const data = store.data;\n  let sortedProducts = [...data];\n\n  if (sortedField !== null) {\n    sortedProducts.sort((a, b) => {\n      if (a[sortedField] < b[sortedField]) {\n        return -1;\n      }\n\n      if (a[sortedField] > b[sortedField]) {\n        return 1;\n      }\n\n      return 0;\n    });\n  } //sorter function that decides how to sort stuff by name index or so whatever\n  // keep context api live so it will not die, look for Link or navigate so context will not die\n  /// IMPORTANT\n  //polish table decide for two pages or both on the same one\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"striped highlight centered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \" teal lighten-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Index\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setSortedField('name'),\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setSortedField('missDistance'),\n            children: \"Miss Distance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setSortedField('avgSize'),\n            children: \"Average Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setSortedField('closeApproachDate'),\n            children: \"Close Approach Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setSortedField('speed'),\n            children: \"Relative Velocity in KM/h\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((asteroid, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"centered\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", idx + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: asteroid.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: asteroid.missDistance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [asteroid.avgSize, \"m\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: asteroid.closeApproachDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: asteroid.speed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: asteroid.url,\n                children: \"Link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)]\n          }, asteroid.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Table, \"WraXpMmD9vOCTTMTgA60uFPzjpA=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/home/dawid/trening/nasa/src/components/Table/Table.jsx"],"names":["React","useState","useContext","StoreContext","Table","sortedField","setSortedField","store","data","sortedProducts","sort","a","b","map","asteroid","idx","name","missDistance","avgSize","closeApproachDate","speed","url","id"],"mappings":"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","sourcesContent":["import React, { useState,useContext } from 'react'\nimport { StoreContext } from \"../../context/StoreContext\";\n\nconst  Table = () =>{\n\n  const [sortedField, setSortedField] = useState(null);\n\n  const { store } = useContext(StoreContext);  \n\n  const data = store.data; \n\n  let sortedProducts = [...data];\n  if (sortedField !== null) {\n    sortedProducts.sort((a, b) => {\n      if (a[sortedField] < b[sortedField]) {\n        return -1;\n      }\n      if (a[sortedField] > b[sortedField]) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n\n  //sorter function that decides how to sort stuff by name index or so whatever\n  // keep context api live so it will not die, look for Link or navigate so context will not die\n\n  /// IMPORTANT\n\n  //polish table decide for two pages or both on the same one\n\n  return (\n    <div>\n      <table className=\"striped highlight centered\">\n        <thead className=\" teal lighten-2\">\n          <td>Index</td>\n          <td>\n            <button type=\"button\" onClick={() => setSortedField('name')}>\n              Name\n            </button>\n          </td>\n          <td>\n            <button type=\"button\" onClick={() => setSortedField('missDistance')}>\n                Miss Distance\n            </button>\n          </td>\n          <td>\n            <button type=\"button\" onClick={() => setSortedField('avgSize')}>\n              Average Size\n            </button>\n          </td>\n          <td>\n            <button type=\"button\" onClick={() => setSortedField('closeApproachDate')}>\n              Close Approach Date\n            </button>\n          </td>\n          <td>\n            <button type=\"button\" onClick={() => setSortedField('speed')}>\n              Relative Velocity in KM/h\n            </button>\n          </td>\n          <td>URL</td>\n        </thead>\n          <tbody>\n            {data.map((asteroid,idx) => {\n              return (\n                <tr \n                  className=\"centered\"\n                  key={asteroid.id}\n                >\n                  <td> {idx+1}</td>\n                  <td>{asteroid.name}</td>\n                  <td>{asteroid.missDistance}</td>\n                  <td>{asteroid.avgSize}m</td>\n                  <td>{asteroid.closeApproachDate}</td>\n                  <td>{asteroid.speed}</td>\n                  <td><a href={asteroid.url}>Link</a></td>\n                </tr>\n              );\n            })}\n          </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Table;\n\n"]},"metadata":{},"sourceType":"module"}