{"ast":null,"code":"const fetchAction = async data => {\n  const apiData = [];\n  console.log(\"empty\", data);\n  Object.keys(data.near_earth_objects).map(day => {\n    const objectsForTheDay = data[day];\n    objectsForTheDay.map(day => {\n      return apiData.push({\n        id: day.id,\n        name: day.name,\n        missDistance: day.close_approach_data[0].miss_distance.lunar,\n        avgSize: (day.estimated_diameter.meters.estimated_diameter_min + day.estimated_diameter.meters.estimated_diameter_max) / 2\n      });\n    });\n  });\n  console.log(\"ful\", apiData);\n  return apiData;\n};\n\nexport default fetchAction;","map":{"version":3,"sources":["/home/dawid/trening/nasa/src/actions/fetchAction.js"],"names":["fetchAction","data","apiData","console","log","Object","keys","near_earth_objects","map","day","objectsForTheDay","push","id","name","missDistance","close_approach_data","miss_distance","lunar","avgSize","estimated_diameter","meters","estimated_diameter_min","estimated_diameter_max"],"mappings":"AACA,MAAMA,WAAW,GAAG,MAAOC,IAAP,IAAgB;AAE/B,QAAMC,OAAO,GAAG,EAAhB;AACCC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBH,IAApB;AAEHI,EAAAA,MAAM,CAACC,IAAP,CAAYL,IAAI,CAACM,kBAAjB,EAAqCC,GAArC,CAAyCC,GAAG,IAAI;AAC3C,UAAMC,gBAAgB,GAAGT,IAAI,CAACQ,GAAD,CAA7B;AACAC,IAAAA,gBAAgB,CAACF,GAAjB,CAAqBC,GAAG,IAAI;AAC1B,aACEP,OAAO,CAACS,IAAR,CAAa;AACXC,QAAAA,EAAE,EAAEH,GAAG,CAACG,EADG;AAEXC,QAAAA,IAAI,EAAEJ,GAAG,CAACI,IAFC;AAGXC,QAAAA,YAAY,EAAEL,GAAG,CAACM,mBAAJ,CAAwB,CAAxB,EAA2BC,aAA3B,CAAyCC,KAH5C;AAIXC,QAAAA,OAAO,EAAE,CAACT,GAAG,CAACU,kBAAJ,CAAuBC,MAAvB,CAA8BC,sBAA9B,GAAuDZ,GAAG,CAACU,kBAAJ,CAAuBC,MAAvB,CAA8BE,sBAAtF,IAA+G;AAJ7G,OAAb,CADF;AAQD,KATD;AAUD,GAZJ;AAcGnB,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBF,OAAlB;AAEL,SAAOA,OAAP;AACE,CAtBH;;AAyBE,eAAeF,WAAf","sourcesContent":["\nconst fetchAction = async (data) => {\n\n     const apiData = [];\n      console.log(\"empty\",data)\n\n   Object.keys(data.near_earth_objects).map(day => {\n        const objectsForTheDay = data[day];\n        objectsForTheDay.map(day => {\n          return (\n            apiData.push({\n              id: day.id,\n              name: day.name, \n              missDistance: day.close_approach_data[0].miss_distance.lunar,\n              avgSize: (day.estimated_diameter.meters.estimated_diameter_min + day.estimated_diameter.meters.estimated_diameter_max) /2\n            })\n          )\n        })\n      })\n\n      console.log(\"ful\",apiData)\n\n return apiData\n  }\n\n\n  export default fetchAction;\n"]},"metadata":{},"sourceType":"module"}