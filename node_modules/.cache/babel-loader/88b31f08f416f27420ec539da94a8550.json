{"ast":null,"code":"var _jsxFileName = \"/home/dawid/trening/Calendar-react/src/components/addTask/AddTask.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Button } from \"../button/Button\";\nimport TextInput from '../textInput/TextInput';\nimport M from \"materialize-css\";\nimport { ADD_JOB } from \"../../types/types\";\nimport { StoreContext } from '../../context/StoreContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddTask = props => {\n  _s();\n\n  const {\n    dispatch\n  } = useContext(StoreContext);\n  const [state, setState] = useState({\n    todo: \"\"\n  });\n  useEffect(() => {\n    M.AutoInit();\n  }, []);\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const dataMap = () => {\n    const newJob = {\n      id: new Date().valueOf(),\n      dayId: props.id,\n      todo: state.todo\n    };\n    return newJob;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newJob = dataMap();\n    dispatch({\n      type: ADD_JOB,\n      payload: newJob\n    });\n    setState({ ...state,\n      todo: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn modal-trigger\",\n      \"data-target\": props.id,\n      children: \"Add Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: props.id,\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Add Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            type: \"text\",\n            name: \"todo\",\n            className: \"validate\",\n            value: state.todo,\n            onChange: handleChange,\n            htmlFor: \"Job to Do\",\n            label: \"Job to Do\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: state.todo <= 0 ? \"btn disabled\" : \"btn teal darken-2 z-depth-2 modal-close\",\n              text: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddTask, \"KuWvjxwKm3JYyU6eoM8CFJ85/kw=\");\n\n_c = AddTask;\nexport default AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["/home/dawid/trening/Calendar-react/src/components/addTask/AddTask.jsx"],"names":["React","useState","useContext","useEffect","Button","TextInput","M","ADD_JOB","StoreContext","AddTask","props","dispatch","state","setState","todo","AutoInit","handleChange","event","target","name","value","dataMap","newJob","id","Date","valueOf","dayId","handleSubmit","preventDefault","type","payload"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { Button } from \"../button/Button\";\nimport TextInput from '../textInput/TextInput'\nimport M from \"materialize-css\";\nimport { ADD_JOB } from \"../../types/types\";\nimport { StoreContext } from '../../context/StoreContext';\n\nconst AddTask = (props) => {\n  const { dispatch } = useContext(StoreContext);\n\n  const [state, setState] = useState({\n    todo: \"\"\n  });\n\n  useEffect(() => {\n    M.AutoInit(); \n  }, []);\n\n  const handleChange = (event) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value,\n    });  };\n\n  const dataMap = () => {\n    const newJob = {\n      id: new Date().valueOf(),\n      dayId: props.id,\n      todo: state.todo\n    };\n    return newJob;\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const newJob = dataMap();\n      dispatch({ type: ADD_JOB, payload: newJob });\n    setState({ ...state, todo: \"\" });\n  };\n\n  return (\n    <div>\n      <button\n        className='btn modal-trigger'\n        data-target={props.id}\n      >\n        Add Job\n      </button>\n      <div id={props.id} className='modal'> \n       <form onSubmit={handleSubmit}>\n          <div className='modal-content'>\n            <h4>Add Job</h4> \n            <TextInput\n              type='text'\n              name='todo'\n              className='validate'\n              value={state.todo}\n              onChange={handleChange}\n              htmlFor='Job to Do'\n              label='Job to Do'\n            />\n            <div className='modal-footer'>\n              <Button className={\n                  state.todo <= 0\n                    ? \"btn disabled\"\n                    : \"btn teal darken-2 z-depth-2 modal-close\"\n                }\n                text='submit'\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddTask;\n"]},"metadata":{},"sourceType":"module"}