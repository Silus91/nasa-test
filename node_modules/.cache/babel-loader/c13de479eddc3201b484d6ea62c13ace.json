{"ast":null,"code":"var _jsxFileName = \"/home/dawid/trening/nasa/src/components/Chart/Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { StoreContext } from \"../../context/StoreContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = () => {\n  _s();\n\n  const {\n    store\n  } = useContext(StoreContext);\n  const data = store.data.near_earth_objects;\n  let arr = [];\n  Object.keys(store.data.near_earth_objects).map(day => {\n    const objectsForTheDay = data[day];\n    objectsForTheDay.map(day => {\n      return arr.push({\n        id: day.id,\n        name: day.name,\n        missDistance: day.close_approach_data[0].miss_distance.kilometers,\n        avgSize: (day.estimated_diameter.kilometers.estimated_diameter_min + day.estimated_diameter.kilometers.estimated_diameter_max) / 2\n      });\n    });\n  });\n  console.log(\"arr\", arr);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hi        \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chart, \"73C7T2gc7osE0gOE4ApLm9/B7dk=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/home/dawid/trening/nasa/src/components/Chart/Chart.jsx"],"names":["React","useContext","StoreContext","Chart","store","data","near_earth_objects","arr","Object","keys","map","day","objectsForTheDay","push","id","name","missDistance","close_approach_data","miss_distance","kilometers","avgSize","estimated_diameter","estimated_diameter_min","estimated_diameter_max","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,SAASC,YAAT,QAA6B,4BAA7B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,QAAM;AAAEC,IAAAA;AAAF,MAAYH,UAAU,CAACC,YAAD,CAA5B;AAEA,QAAMG,IAAI,GAAGD,KAAK,CAACC,IAAN,CAAWC,kBAAxB;AACJ,MAAIC,GAAG,GAAE,EAAT;AACIC,EAAAA,MAAM,CAACC,IAAP,CAAYL,KAAK,CAACC,IAAN,CAAWC,kBAAvB,EAA2CI,GAA3C,CAA+CC,GAAG,IAAI;AAClD,UAAMC,gBAAgB,GAAGP,IAAI,CAACM,GAAD,CAA7B;AACAC,IAAAA,gBAAgB,CAACF,GAAjB,CAAqBC,GAAG,IAAI;AACzB,aACIJ,GAAG,CAACM,IAAJ,CAAS;AACLC,QAAAA,EAAE,EAAEH,GAAG,CAACG,EADH;AAELC,QAAAA,IAAI,EAAEJ,GAAG,CAACI,IAFL;AAGLC,QAAAA,YAAY,EAAEL,GAAG,CAACM,mBAAJ,CAAwB,CAAxB,EAA2BC,aAA3B,CAAyCC,UAHlD;AAILC,QAAAA,OAAO,EAAE,CAACT,GAAG,CAACU,kBAAJ,CAAuBF,UAAvB,CAAkCG,sBAAlC,GAA2DX,GAAG,CAACU,kBAAJ,CAAuBF,UAAvB,CAAkCI,sBAA9F,IAAuH;AAJ3H,OAAT,CADJ;AAQH,KATA;AAUH,GAZD;AAgBAC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBlB,GAAlB;AAGA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH,CA7BD;;GAAMJ,K;;KAAAA,K;AA+BN,eAAeA,KAAf","sourcesContent":["import React,{useContext} from 'react'\nimport { StoreContext } from \"../../context/StoreContext\";\n\nconst Chart = () => {\n\n    const { store } = useContext(StoreContext);\n\n    const data = store.data.near_earth_objects;\nlet arr =[];\n    Object.keys(store.data.near_earth_objects).map(day => {\n        const objectsForTheDay = data[day];\n        objectsForTheDay.map(day => {\n           return (\n               arr.push({\n                   id: day.id,\n                   name: day.name, \n                   missDistance: day.close_approach_data[0].miss_distance.kilometers,\n                   avgSize: (day.estimated_diameter.kilometers.estimated_diameter_min + day.estimated_diameter.kilometers.estimated_diameter_max) /2\n                })\n           )\n       })\n    })\n\n\n\n    console.log(\"arr\",arr)\n\n\n    return (\n        <div>\nhi        </div>\n    )\n}\n\nexport default Chart;\n\n\n"]},"metadata":{},"sourceType":"module"}